-- To run: ./run.sh
-- Or: sqlite3 zcta.db < zcta.SQL.txt > zcta.OUT.txt
-- Combines industry and poverty data
-- Outputs to community/data/[year]_zcta_sm.csv
-- ALERT!!!!!! If line number change in this file, also update automate.py
-- Search and replace year "2016" in 5 places below.
-- Also update prior year "2015" in 1 place.

-- Setup
.headers on
.separator ','

drop table if exists industries;
drop table if exists poverty;
drop table if exists zcta_output; drop table if exists povertyPriorYear1; drop table if exists povertyNextYear;

CREATE table industries
(
	zcta int,
	latitude int,
	longitude int,
	JobsTotal int,
	JobsAgriculture int,
	JobsAutomotive int,
	JobsEntertainment int,
	JobsConstruction int,
	JobsHealthcare int,
	JobsManufacturing int,
	JobsProfessional int,
	JobsRealestate int,
	JobsTrade int,
	JobsTransport int
);
.mode csv
.import ../../../community/data/2015/2015_zcta_industries_sm.csv industries

UPDATE industries SET JobsAgriculture = 0 WHERE JobsAgriculture = '';
UPDATE industries SET JobsAutomotive = 0 WHERE JobsAutomotive = '';
UPDATE industries SET JobsEntertainment = 0 WHERE JobsEntertainment = '';
UPDATE industries SET JobsConstruction = 0 WHERE JobsConstruction = '';
UPDATE industries SET JobsHealthcare = 0 WHERE JobsHealthcare = '';
UPDATE industries SET JobsManufacturing = 0 WHERE JobsManufacturing = '';
UPDATE industries SET JobsProfessional = 0 WHERE JobsProfessional = '';
UPDATE industries SET JobsRealestate = 0 WHERE JobsRealestate = '';
UPDATE industries SET JobsTrade = 0 WHERE JobsTrade = '';
UPDATE industries SET JobsTransport = 0 WHERE JobsTransport = '';

CREATE table poverty
(
	zcta int,
	population int,
	poverty int,
	poverty_under18 int,
	poverty_18to65 int,
	poverty_over65 int,
	education int,
	work_experience int,
	working_fulltime int,
	working_fulltime_poverty  int
);
.mode csv
.import ../poverty/output/2015_zcta_poverty.csv poverty

CREATE table povertyPriorYear1
(
	zcta int,
	population int,
	poverty int,
	poverty_under18 int,
	poverty_18to65 int,
	poverty_over65 int,
	education int,
	work_experience int,
	working_fulltime int,
	working_fulltime_poverty  int
);
.mode csv
.import ../poverty/output/2014_zcta_poverty.csv povertyPriorYear1

CREATE table povertyNextYear
(
	zcta int,
	population int,
	poverty int,
	poverty_under18 int,
	poverty_18to65 int,
	poverty_over65 int,
	education int,
	work_experience int,
	working_fulltime int,
	working_fulltime_poverty  int
);
.mode csv
.import ../poverty/output/2016_zcta_poverty.csv povertyNextYear

-- We can try flipping these later
-- 32394 industry zcta's - empty omitted, including US Virgin Islands
-- 33120 poverty zcta's - more

create table zcta_output as
select i.zcta, 
-- lat/lon are available in /data/[year]/[year]_zcta_industries_sm
-- i.latitude, i.longitude, -- omitting from small file 
--i.JobsTotal,
1000 * i.JobsTotal/p.population AS JobsTotal1000,
1000 * i.JobsAgriculture/p.population AS JobsAgriculture1000,
--1000 * i.JobsAutomotive/p.population AS JobsAutomotive1000,
1000 * i.JobsEntertainment/p.population AS JobsEntertainment1000,
1000 * i.JobsConstruction/p.population AS JobsConstruction1000,
1000 * i.JobsHealthcare/p.population AS JobsHealthcare1000,
1000 * i.JobsManufacturing/p.population AS JobsManufacturing1000,
1000 * i.JobsProfessional/p.population AS JobsProfessional1000,
1000 * i.JobsRealestate/p.population AS JobsRealestate1000,
1000 * i.JobsTrade/p.population AS JobsTrade1000,
1000 * i.JobsTransport/p.population AS JobsTransport1000,
--i.JobsAgriculture,
--i.JobsAutomotive,
--i.JobsEntertainment,
--i.JobsConstruction,
--i.JobsHealthcare,
--i.JobsManufacturing,
--i.JobsProfessional,
--i.JobsRealestate,
--i.JobsTrade,
--i.JobsTransport,
p.population,
p.poverty,
p.poverty_under18,
p.poverty_18to65,
p.poverty_over65,
p.education,
p.work_experience,
p.working_fulltime,
p.working_fulltime_poverty,
--prior.poverty priorPoverty,
-- Poverty will be changing to a total, so use this to compare percentages
-- (prior.poverty/prior.population - p.poverty/p.population) AS povertyChange,
-- (prior.poverty - p.poverty) AS povertyChange,

-- Also modify when changing poverty to total >>>>>>
-- Change from prior year is steady (0%) or increasing, change to next year is increasing by 2% or more.
CASE 
	WHEN (prior1.poverty - p.poverty) >= 0 AND (p.poverty - next.poverty) >= 2 THEN 1
	ELSE 0
END
AS y -- the povertyBinary for >= 2% in coming year, and no decline for current year.

from industries i
inner join poverty p on i.zcta = p.zcta -- inner join with the next line avoids dup header row
and p.population >= 1 -- Prevents null 1000 columns
and i.zcta != 'zcta'
inner join povertyPriorYear1 prior1 on p.zcta = prior1.zcta
inner join povertyNextYear next on p.zcta = next.zcta
;


--convert to csv
.mode csv
.output ../../../community/data/2015/2015_zcta_sm.csv
select * from zcta_output;
.output stdout


drop table if exists industries;
drop table if exists poverty;
drop table if exists zcta_output;
